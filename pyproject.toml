[tool.poetry]
name = "dasbootstrap"
version = "0.1.1"
description = "System installer using ansible"
authors = ["Jeremy Hettenhouser <jhettenh@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "shared" }
]

# https://github.com/cod3licious/pubvis/blob/f3559f6b906d24d2104e0808dd5749dce6e02360/pyproject.toml#L36
[tool.poe.tasks]
test = "poetry run pytest"
test_full = ["check", "format", "test", "integration"]

[tool.poe.tasks.integration]
shell = "bin/integration_test.zsh"

[tool.poe.tasks.check]
shell = "ruff check pyprojects shared && bandit -c pyproject.toml -r pyprojects shared"

[tool.poe.tasks.format]
shell = "bin/project_format.zsh"

[tool.bandit]
exclude_dirs = [
    ".eggs",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "tests",
    "__pypackages__",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff]
target-version = "py311"
line-length = 128

exclude = [
    ".eggs",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "tests",
    "__pypackages__",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "A", "B", "C4", "D", "E", "F", "G", "I", "N", "Q", "W", "COM", "DTZ", "FA", "ICN", "INP", "PIE", "PD", "PL", "RSE",
    "RET", "RUF", "SIM", "SLF", "UP"
]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["src", "src.*"]
section-order = ["future", "standard-library", "third-party", "first-party", "tests", "local-folder"]

[tool.ruff.lint.isort.sections]
"tests" = ["tests"]

[tool.pyright]
include = ["pyprojects/dasbootstrap","shared/config"]
exclude = ["**/node_modules",
    "**/__pycache__",
    "pyprojects/**/experimental",
    "pyprojects/**/typestubs",
    "**/tests"
]

defineConstant = { DEBUG = true }
stubPath = "dasbootstrap/stubs"

reportMissingImports = false
reportMissingTypeStubs = false

pythonVersion = "3.11.8"
pythonPlatform = "Linux"

[tool.pytest.ini_options]
testpaths=[
    "shared/tests",
    "pyprojects/dasbootstrap/tests"
]
minversion = "6.0"
addopts = "--disable-warnings"
markers = ["slow"]
srcpaths = "."

[tool.poetry.plugins]


[tool.poetry.dependencies]
python = "^3.11"
wheel = "0.42.0"
setuptools = "69.0.3"
ansible = "^9.1.0"
ansible-lint = { version = "^6.22.1", markers = "platform_system != 'Windows'" }
proxmoxer = "2.0.1"
cryptography = "41.0.7"
urllib3 = "2.1.0"
pexpect = "4.9.0"
ipaddr = "^2.2.0"
ansible-compat = "^4.1.10"
molecule = "^6.0.3"
molecule-plugins = {extras = ["docker"], version = "^23.5.0"}
paramiko = "^3.4.0"
playwright = "^1.41.2"
pyautogui = "^0.9.54"
pynput = "^1.7.6"
tdnss = "^0.2.1"
httpx = "^0.27.0"
xdg-base-dirs = "^6.0.1"
ansible-runner = "^2.3.6"
python-nmap = "^0.7.1"
types-python-nmap = "^0.7.1.20240106"
sqlite-utils = "^3.36"
pass-import = "^3.5"
strip-ansi = "^0.1.1"
pyyaml = "^6.0.1"

typer = "^0.12.3"
pyright = "^1.1.358"
plumbum = "^1.8.2"
passlib = "^1.7.4"
docker = "^7.0.0"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
typer = "^0.12.3"
jmespath = "1.0.1"
docker = "7.0.0"
jq = "1.6.0"
molecule = "6.0.3"
molecule-containers = "^2.0.0"
paramiko = "3.4.0"
requests = "2.31.0"
argparse = "1.4.0"
virtualenv-pyenv = "^0.4.0"
certifi = "^2023.11.17"
dnspython = "2.4.2"
pyspnego = {extras = ["kerberos"], version = "0.10.2"}
sansldap = "0.1.0"
poethepoet = "^0.25.0"
ruff = "^0.3.7"
pyupgrade = "^3.15.2"
bandit = "^1.7.8"
pytest = "^8.1.1"
pytest-docker = "^3.1.1"
pytest-ansible = "^24.1.2"
pytest-srcpaths = "^1.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
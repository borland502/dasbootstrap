# - name: Debian Bookworm Container Bootstrap
#   hosts: "*"
#   gather_facts: true
#   remote_user: root
#   vars_files:
#     - /etc/ansible/global_vars/all.yaml
#     - /etc/ansible/global_vars/pve.yaml
#     - /etc/ansible/global_vars/pve_kvm.yaml
#     - /etc/ansible/global_vars/pve_lxc.yaml
#   roles:
#     # Sometimes the package manager will barf as the time will be out of date on the template, so we sync time first
#     - role: stuvusIT.systemd-timesyncd
#       vars:
#         timesync_timezone: "America/New_York"
#         timesync_ntp_hosts:
#           - 0.us.pool.ntp.org
#           - 1.us.pool.ntp.org
#           - 2.us.pool.ntp.org
#           - 3.us.pool.ntp.org
#     - role: buluma.roles.bootstrap
#     - role: buluma.roles.buildtools
#     - role: buluma.roles.core_dependencies
#     - role: buluma.roles.locale
#       vars:
#         locale_timezone: "America/New_York"
#     - role: buluma.roles.auto_update
#       vars:
#         auto_update_apply_updates: true
#     - role: GROG.package
#       vars:
#         package_state: latest
#         package_update_cache: false
#         package_list:
#           - name: zsh
#           - name: systemd-cron
#           - name: curl
#           - name: realmd
#           - name: sssd-tools
#           - name: sssd
#           - name: libnss-sss
#           - name: libpam-sss
#           - name: adcli
#           - name: packagekit
#           - name: python3-full
#           - name: python3-pexpect
#           - name: qemu-guest-agent
#           - name: vim
#           - name: rsync
#     - role: technohouser.sys_tweaks
#     - role: buluma.roles.users
#       vars:
#         users_ssh_key_directory: .ssh
#         users_shell: /bin/zsh
#         users_cron_allow: true
#         users_create_home: true
#         users_group_list:
#           - name: "{{ ansible.domain_user }}"
#             state: present
#         users_user_list:
#           - name: "{{ ansible.domain_user }}"
#             shell: /bin/zsh
#             password: "{{ ansible.password | password_hash }}"
#             comment: "Service User"
#             create_home: true
#             generate_ssh_key: true
#             ssh_key_type: ed25519
#             groups:
#               - "{{ ansible.domain_user }}"
#               - tty
#               - man
#               - users
#               - adm
#               - sudo

#   post_tasks:
#     - name: Add ansible service key to authorized users file in service account
#       ansible.posix.authorized_key:
#         user: "{{ ansible.domain_user }}"
#         key: "{{ ansible.pub_key }}"
#     - name: Add ansible service key to authorized users file in root
#       remote_user: root
#       ansible.posix.authorized_key:
#         user: "{{ ansible.domain_user }}"
#         key: "{{ ansible.pub_key }}"
#     # - name: Close off the ability to log into root via password

- name: Begin user / service level scaffolding with homebrew
  hosts: "*"
  gather_facts: true
  remote_user: "{{ ansible.domain_user }}"
  vars_files:
    - /etc/ansible/global_vars/all.yaml
  roles:
    - role: professormanhattan.homebrew
  post_tasks:
    - name: Append line to .zshenv if not present so that brew is available to interactive and non-interactive sessions
      ansible.builtin.lineinfile:
        path: $HOME/.zshenv
        line: 'eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)'
        mode: "0644"
        create: true
        state: present
    - name: Add service account to passwordless sudo
      become: true
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        regexp: '^{{ ansible.domain_user }}'
        line: '{{ ansible.domain_user }} ALL=(ALL) NOPASSWD: ALL'
        state: present
        validate: 'visudo -cf %s'
        mode: "0644"

    - name: Install some common service / user brew packages
      community.general.homebrew:
        name:
          - zsh
          - gcc
          - git
          - vim
          - fzf
          - bat
          - zinit
          - chezmoi
          - starship
          - fzf
          - rg
          - fd
          - eza
          - prettyping
          - nmap
          - rsync
    - name: Make ~/bin
      ansible.builtin.file:
        state: directory
        path: ~/bin
        mode: "0700"
        owner: "{{ ansible.domain_user }}"
        group: "{{ ansible.domain_user }}"

    - name: Copy the age key over to ~/bin
      ansible.builtin.copy:
        content: "{{ users[0]['age_key'] }}"
        dest: ~/bin/key.txt
        mode: "0600"
        owner: "{{ ansible.domain_user }}"
        group: "{{ ansible.domain_user }}"

    - name: Initialize chezmoi repo
      ansible.builtin.command:
        cmd: >-
          chezmoi init --apply --verbose https://github.com/borland502/dotfiles
        creates: ~/.local/share/chezmoi

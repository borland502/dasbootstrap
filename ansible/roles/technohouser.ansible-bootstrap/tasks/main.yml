---
- name: Wait for connection
  ansible.builtin.wait_for_connection:
    connect_timeout: 5
    delay: 10
    sleep: 5
    timeout: 120

- name: Get home directory
  ansible.builtin.set_fact:
    home_dir: "{{ lookup('env', 'HOME') }}"

- name: Ensure apt proxy configuration
  ansible.builtin.copy:
    content: |
      Acquire::http { Proxy "{{ apt_cacher_ng }}"; }
    dest: /etc/apt/apt.conf.d/proxy
    owner: root
    group: root
    mode: "0644"

- name: Install Personal favorite packages
  ansible.builtin.apt:
    name:
      - zsh
      - systemd
      - systemd-cron
      - systemd-resolved
      - systemd-timesyncd

- name: Prep to be managed by ansible
  ansible.builtin.import_role:
    name: robertdebock.roles.bootstrap

- name: Install build tools for homebrew and other downstream dependencies
  ansible.builtin.import_role:
    name: robertdebock.roles.buildtools

- name: Install pyenv
  ansible.builtin.import_role:
    name: staticdev.pyenv

- name: Install python tools
  ansible.builtin.import_role:
    name: staticdev.python-developer

# tasks file for /home/ansible@hettenhouser.com/.local/share/dasbootstrap/ansible/roles/technohouser.ansible-bootstrap
- name: Create Development Directory for Repos
  ansible.builtin.file:
    path: "{{ lookup('env', 'XDG_DATA_DIR') }}/github"
    state: directory
    mode: "0700"
    owner: ansible
    group: ansible

- name: Looping over github_repos var, clone each entry
  ansible.builtin.git:
    repo: "{{ item }}"
    dest: /opt/{{ item.split('/')[-1].replace('.git', '') }} # extract repo name
    update: true
    single_branch: true
    clone: true
    force: true
    version: master
  loop: "{{ github_repos_master }}"

- name: Looping over github_repos var, clone each entry
  ansible.builtin.git:
    repo: "{{ item }}"
    dest: /opt/{{ item.split('/')[-1].replace('.git', '') }} # extract repo name
    update: true
    single_branch: true
    clone: true
    force: true
    version: main
  loop: "{{ github_repos_main }}"

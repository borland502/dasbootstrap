version: "3"

# https://github.com/RDFLib/rdflib/blob/main/Taskfile.yml
vars:
  POETRY: poetry
  # The prefix to use when running dev commands
  RUN_PREFIX: "{{.POETRY}} run"
  # The python to use for running in the venv
  VENV_PYTHON: "{{.RUN_PREFIX}} python"
  # The python interpreter to use.
  PYTHON: python
  # Truthish values ("true", "1", etc.) results in extras being installed with
  # pip.
  INSTALL_EXTRAS: "false"
  # Truthish values ("true", "1", etc.) results in extensive tests being ran and
  # dependencies for extensive tests being installed.
  EXTENSIVE: "false"
tasks:
  tools:ruff:check:
    desc: Run ruff
    cmds:
      - "{{.RUN_PREFIX}} ruff check pyprojects shared --config pyproject.toml --fix"

  tools:ruff:format:
    desc: Format code
    cmds:
      - "{{.RUN_PREFIX}} ruff format ./pyprojects ./shared --config pyproject.toml --line-length 128 --target-version py311"

  tools:bandit:
    desc: Run bandit
    cmds:
      - "{{.RUN_PREFIX}} bandit -c pyproject.toml -r ./pyprojects ./shared"

  init:
    cmds:
      - |
        bootstrap_ansible_node 'ansible'

  tests:unit:
    desc: Runs pytest unit tests
    cmds:
      - "{{.RUN_PREFIX}} pytest"

  tests:integration:
    desc: Runs molecule integration and pytest integration tests
    cmds:
      - task: tools:bandit
      - task: tools:ruff:check
      - task: tools:ruff:format
      - task: tests:unit

  tests:functional:
    desc: Runs all actions against a live proxmox server
    cmds:
      - '{{.VENV_PYTHON}} -m "pyprojects.dasbootstrap.src.dasbootstrap" update-collections'
      - '{{.VENV_PYTHON}} -m "pyprojects.dasbootstrap.src.dasbootstrap" update-roles'
      - '{{.VENV_PYTHON}} -m "pyprojects.dasbootstrap.src.dasbootstrap" destroy --app-name lxc'
      - '{{.VENV_PYTHON}} -m "pyprojects.dasbootstrap.src.dasbootstrap" create --app-name lxc'
      - '{{.VENV_PYTHON}} -m "pyprojects.dasbootstrap.src.dasbootstrap" destroy --app-name lxc'
      - '{{.VENV_PYTHON}} -m "pyprojects.dasbootstrap.src.dasbootstrap" update-facts'

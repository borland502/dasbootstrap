version: "3"

vars:
  POETRY: poetry
  PYTHON: python
  PYTEST: pytest
  PIP: pip
  GH: gh
  # The prefix to use when running dev commands
  RUN_PREFIX: "{{.POETRY}} run"
  PYTEST_PREFIX: "{{.RUN_PREFIX}} {{.PYTEST}}"
  PIP_PREFIX: "{{.RUN_PREFIX}} {{.PIP}}"
  BUILD_ALL_PREFIX: "{{.POETRY}} build-project"
  PYTHON_PROJ_SRC: "./pyprojects/**/*.py"
  PYTHON_SHARED_SRC: "./shared/**/*.py"
  PYTHON_TMP_FOLDER: "../.prepare_dasbootstrap"
  PYTHON_DIST: "./dist"
  # The python to use for running in the venv
  VENV_PYTHON: "{{.RUN_PREFIX}} python"
  RUN_MODULE_PREFIX: "{{.RUN_PREFIX}} {{.PYTHON}} -m"
  CHEZMOI_HOME: ""

tasks:
  dbs:run:
    desc: General alias for `poetry run python -m dasbootstrap` <command>
    cmds:
      - "{{.RUN_MODULE_PREFIX}} dasbootstrap {{.CLI_ARGS}}"

  # gh:commit:
  #   deps:
  #     - task: install:all:local
  #     - task: tests:functional
  #   desc: Commit to the daily branch
  #   cmds:

  tools:ruff:check:
    desc: Run ruff
    cmds:
      - "{{.RUN_PREFIX}} ruff check {{.PYTHON_PROJ_SRC}} {{.PYTHON_SHARED_SRC}} --config pyproject.toml --fix"

  tools:ruff:format:
    desc: Format code
    cmds:
      - "{{.RUN_PREFIX}} ruff format {{.PYTHON_PROJ_SRC}} {{.PYTHON_SHARED_SRC}} --config pyproject.toml --line-length 128 --target-version py311"

  tools:bandit:
    desc: Run bandit
    sources:
      - "{{.PYTHON_PROJ_SRC}}"
      - "{{.PYTHON_SHARED_SRC}}"
    cmds:
      - "{{.RUN_PREFIX}} bandit -c pyproject.toml -r {{.PYTHON_PROJ_SRC}} {{.PYTHON_SHARED_SRC}}"

  tests:integration:
    deps:
      - task: tools:bandit
      - task: tools:ruff:check
      - task: tools:ruff:format
    desc: Runs molecule integration and pytest unit/integration tests
    cmds:
      - "{{.PYTEST_PREFIX}}"

  build:clean:
    desc: Clean build directories
    cmds:
      - "rm -rf {{.PYTHON_DIST}}"

  build:all:
    desc: Build all pyprojects and the shared libraries for them
    sources:
      - "{{.PYTHON_TMP_FOLDER}}"
    generates:
      - "{{.PYTHON_DIST}}"
    cmds:
      - "{{.BUILD_ALL_PREFIX}}"

  install:all:local:
    desc: Install all pyprojects to local .venv
    sources:
      - "{{.PYTHON_DIST}}"
    cmds:
      - "{{.PIP_PREFIX}} install {{.PYTHON_DIST}}/*.whl --force-reinstall --no-deps"

  tests:functional:
    desc: Runs all actions against a live proxmox server
    cmds:
      - '{{.VENV_PYTHON}} -m "dasbootstrap" update-collections'
      - '{{.VENV_PYTHON}} -m "dasbootstrap" update-roles'
      - '{{.VENV_PYTHON}} -m "dasbootstrap" destroy --app-name lxc'
      - '{{.VENV_PYTHON}} -m "dasbootstrap" create --app-name lxc'
      - '{{.VENV_PYTHON}} -m "dasbootstrap" destroy --app-name lxc'
      - '{{.VENV_PYTHON}} -m "dasbootstrap" update-facts'

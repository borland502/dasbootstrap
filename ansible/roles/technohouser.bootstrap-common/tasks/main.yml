---
# tasks file for ./ansible/roles/technohouser.bootstrap-common

# Mechanical hard drives can be slow, so ensure the lxc is in a ready state
- name: Wait for connection
  ansible.builtin.wait_for_connection:
    connect_timeout: 5
    delay: 10
    sleep: 5
    timeout: 120

- name: Remove any apt-cacher-ng proxy settings
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d/00aptproxy
    state: absent

- name: Set up nexus apt proxy
  ansible.builtin.apt_repository:
    filename: nexus-bookworm-proxy
    repo: deb {{ nexus_proxy }}/bookworm-apt-proxy/ bookworm main contrib
    state: present
    update_cache: false
  when: ansible_distribution_release == 'bookworm'

- name: Set up the nexus apt updates proxy
  ansible.builtin.apt_repository:
    filename: nexus-bookworm-proxy
    repo: deb {{ nexus_proxy }}/bookworm-apt-proxy/ bookworm-updates main contrib
    state: present
    update_cache: false
  when: ansible_distribution_release == 'bookworm'

- name: Set up the nexus security patches proxy
  ansible.builtin.apt_repository:
    filename: nexus-bookworm-proxy
    repo: deb {{ nexus_proxy }}/security-bookworm-apt-proxy/ bookworm-security main contrib
    state: present
    update_cache: false
  when: ansible_distribution_release == 'bookworm'

- name: Set up the nexus proxy repo for docker packages
  ansible.builtin.apt_repository:
    filename: nexus-bookworm-proxy
    repo: deb [trusted=yes] {{ nexus_proxy }}/docker-bookworm-apt-proxy/ bookworm InRelease
    state: present
    update_cache: false
  when: ansible_distribution_release == 'bookworm'

- name: Assume apt proxies are good and delete the sources.list file
  ansible.builtin.file:
    path: /etc/apt/sources.list
    state: absent

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Set up backports repo
  ansible.builtin.apt_repository:
    repo: deb [trusted=yes] http://deb.debian.org/debian bookworm-backports main contrib
    state: present
    update_cache: false
  when: ansible_distribution_release == 'bullseye'

- name: Set up backports src repo
  ansible.builtin.apt_repository:
    repo: deb-src [trusted=yes] http://deb.debian.org/debian bookworm-backports main contrib
    state: present
    update_cache: false
  when: ansible_distribution_release == 'bullseye'

- name: Set up timesyncd
  ansible.builtin.import_role:
    name: stuvusIT.systemd-timesyncd

- name: Configure locale for en_us.utf8
  ansible.builtin.import_role:
    name: robertdebock.roles.locale
  when: ansible_distribution_release != 'bullseye'

- name: Prep to be managed by ansible
  ansible.builtin.import_role:
    name: robertdebock.roles.bootstrap

- name: Install build tools for homebrew and other downstream dependencies
  ansible.builtin.import_role:
    name: robertdebock.roles.buildtools

- name: Configure automatic updates for apt/yum
  ansible.builtin.import_role:
    name: robertdebock.roles.auto_update

- name: Install system level personal favorite packages
  ansible.builtin.import_role:
    name: GROG.package

- name: Change root password
  ansible.builtin.user:
    name: "root"
    update_password: on_create
    password: "{{ ansible.password | ansible.builtin.password_hash }}"
    state: present

- name: Create service account user
  ansible.builtin.import_role:
    name: buluma.roles.users

- name: Add ansible service key to authorized users file in service account
  ansible.posix.authorized_key:
    user: "{{ ansible.user }}"
    key: "{{ ansible.pub_key }}"

- name: Add administrator pub key
  ansible.posix.authorized_key:
    user: "{{ ansible.user }}"
    key: "{{ users[0]['pub_key'] }}"

- name: Add ansible service key to authorized users file in root
  ansible.posix.authorized_key:
    user: "{{ ansible.user }}"
    key: "{{ ansible.pub_key }}"
